name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:

  # See https://mozilla.github.io/cargo-vet/configuring-ci.html
  cargo-vet:
    name: Vet Dependencies
    runs-on: ubuntu-latest
    env:
      CARGO_VET_VERSION: 0.10.0
    steps:
      - uses: actions/checkout@master
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: ${{ runner.tool_cache }}/cargo-vet
          key: cargo-vet-bin-${{ env.CARGO_VET_VERSION }}
      - run: echo "${{ runner.tool_cache }}/cargo-vet/bin" >> $GITHUB_PATH
      - run: cargo install --root ${{ runner.tool_cache }}/cargo-vet --version ${{ env.CARGO_VET_VERSION }} cargo-vet
      - run: cargo vet --locked

  test:
    name: "Test & lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        id: toolchain
        with:
          components: rustfmt, clippy
      # See https://github.com/actions/cache/blob/main/examples.md#rust---cargo
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-rust-${{ steps.toolchain.outputs.cachekey }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo fmt --check
      # Just the library crate
      - run: cargo build
      # Regular CLI build, for use e.g. in distribution packages
      - run: cargo build --features cli
      # Test all features build for manpage, etc.
      - run: cargo build --all-features
      - run: cargo clippy --all-targets --all-features
      - run: cargo test --all-features
      - run: cargo doc
      - name: cargo deny check
        uses: EmbarkStudios/cargo-deny-action@v2
        with:
          rust-version: stable
